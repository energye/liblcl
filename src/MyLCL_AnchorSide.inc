
//----------------------------------------
// The code is automatically generated by the GenlibLcl tool.
// Copyright Â© yanghy. All Rights Reserved.
// 
// Licensed under Lazarus.modifiedLGPL
//
//----------------------------------------

//CLASSMETHOD:
procedure AnchorSide_Assign(AObj: TAnchorSide; Source: TPersistent); extdecl;
begin
  handleExceptionBegin
  AObj.Assign(Source);
  handleExceptionEnd
end;

//CLASSMETHOD:
function AnchorSide_GetNamePath(AObj: TAnchorSide): PChar; extdecl;
begin
  handleExceptionBegin
  Result :=  PChar(AObj.GetNamePath);
  handleExceptionEnd
end;

//CLASSMETHOD:
function AnchorSide_ClassType(AObj: TAnchorSide): TClass; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.ClassType;
  handleExceptionEnd
end;

//CLASSMETHOD:
function AnchorSide_ClassName(AObj: TAnchorSide): PChar; extdecl;
begin
  handleExceptionBegin
  Result :=  ToPChar(AObj.ClassName);
  handleExceptionEnd
end;

//CLASSMETHOD:
function AnchorSide_InstanceSize(AObj: TAnchorSide): Integer; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.InstanceSize;
  handleExceptionEnd
end;

//CLASSMETHOD:
function AnchorSide_InheritsFrom(AObj: TAnchorSide; AClass: TClass): LongBool; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.InheritsFrom(AClass);
  handleExceptionEnd
end;

//CLASSMETHOD:
function AnchorSide_Equals(AObj: TAnchorSide; Obj: TObject): LongBool; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.Equals(Obj);
  handleExceptionEnd
end;

//CLASSMETHOD:
function AnchorSide_GetHashCode(AObj: TAnchorSide): Integer; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.GetHashCode;
  handleExceptionEnd
end;

//CLASSMETHOD:
function AnchorSide_ToString(AObj: TAnchorSide): PChar; extdecl;
begin
  handleExceptionBegin
  Result :=  PChar(AObj.ToString);
  handleExceptionEnd
end;

function AnchorSide_GetOwner(AObj: TAnchorSide): TControl; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.Owner;
  handleExceptionEnd
end;

function AnchorSide_GetKind(AObj: TAnchorSide): TAnchorKind; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.Kind;
  handleExceptionEnd
end;

function AnchorSide_GetControl(AObj: TAnchorSide): TControl; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.Control;
  handleExceptionEnd
end;

procedure AnchorSide_SetControl(AObj: TAnchorSide; AValue: TControl); extdecl;
begin
  handleExceptionBegin
  AObj.Control := AValue;
  handleExceptionEnd
end;

function AnchorSide_GetSide(AObj: TAnchorSide): TAnchorSideReference; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.Side;
  handleExceptionEnd
end;

procedure AnchorSide_SetSide(AObj: TAnchorSide; AValue: TAnchorSideReference); extdecl;
begin
  handleExceptionBegin
  AObj.Side := AValue;
  handleExceptionEnd
end;

function AnchorSide_StaticClassType: TClass; extdecl;
begin
  Result := TAnchorSide;
end;

exports
  AnchorSide_Assign,
  AnchorSide_GetNamePath,
  AnchorSide_ClassType,
  AnchorSide_ClassName,
  AnchorSide_InstanceSize,
  AnchorSide_InheritsFrom,
  AnchorSide_Equals,
  AnchorSide_GetHashCode,
  AnchorSide_ToString,
  AnchorSide_GetOwner,
  AnchorSide_GetKind,
  AnchorSide_GetControl,
  AnchorSide_SetControl,
  AnchorSide_GetSide,
  AnchorSide_SetSide,
  AnchorSide_StaticClassType;

