
//----------------------------------------
// The code is automatically generated by the GenlibLcl tool.
// Copyright Â© yanghy. All Rights Reserved.
// 
// Licensed under Lazarus.modifiedLGPL
//
//----------------------------------------

//CLASSMETHOD:
procedure IconOptions_Assign(AObj: TIconOptions; Source: TPersistent); extdecl;
begin
  handleExceptionBegin
  AObj.Assign(Source);
  handleExceptionEnd
end;

//CLASSMETHOD:
function IconOptions_GetNamePath(AObj: TIconOptions): PChar; extdecl;
begin
  handleExceptionBegin
  Result :=  PChar(AObj.GetNamePath);
  handleExceptionEnd
end;

//CLASSMETHOD:
function IconOptions_ClassType(AObj: TIconOptions): TClass; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.ClassType;
  handleExceptionEnd
end;

//CLASSMETHOD:
function IconOptions_ClassName(AObj: TIconOptions): PChar; extdecl;
begin
  handleExceptionBegin
  Result :=  ToPChar(AObj.ClassName);
  handleExceptionEnd
end;

//CLASSMETHOD:
function IconOptions_InstanceSize(AObj: TIconOptions): Integer; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.InstanceSize;
  handleExceptionEnd
end;

//CLASSMETHOD:
function IconOptions_InheritsFrom(AObj: TIconOptions; AClass: TClass): LongBool; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.InheritsFrom(AClass);
  handleExceptionEnd
end;

//CLASSMETHOD:
function IconOptions_Equals(AObj: TIconOptions; Obj: TObject): LongBool; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.Equals(Obj);
  handleExceptionEnd
end;

//CLASSMETHOD:
function IconOptions_GetHashCode(AObj: TIconOptions): Integer; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.GetHashCode;
  handleExceptionEnd
end;

//CLASSMETHOD:
function IconOptions_ToString(AObj: TIconOptions): PChar; extdecl;
begin
  handleExceptionBegin
  Result :=  PChar(AObj.ToString);
  handleExceptionEnd
end;

function IconOptions_GetArrangement(AObj: TIconOptions): TIconArrangement; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.Arrangement;
  handleExceptionEnd
end;

procedure IconOptions_SetArrangement(AObj: TIconOptions; AValue: TIconArrangement); extdecl;
begin
  handleExceptionBegin
  AObj.Arrangement := AValue;
  handleExceptionEnd
end;

function IconOptions_GetAutoArrange(AObj: TIconOptions): LongBool; extdecl;
begin
  handleExceptionBegin
  Result :=  AObj.AutoArrange;
  handleExceptionEnd
end;

procedure IconOptions_SetAutoArrange(AObj: TIconOptions; AValue: LongBool); extdecl;
begin
  handleExceptionBegin
  AObj.AutoArrange := AValue;
  handleExceptionEnd
end;

function IconOptions_StaticClassType: TClass; extdecl;
begin
  Result := TIconOptions;
end;

exports
  IconOptions_Assign,
  IconOptions_GetNamePath,
  IconOptions_ClassType,
  IconOptions_ClassName,
  IconOptions_InstanceSize,
  IconOptions_InheritsFrom,
  IconOptions_Equals,
  IconOptions_GetHashCode,
  IconOptions_ToString,
  IconOptions_GetArrangement,
  IconOptions_SetArrangement,
  IconOptions_GetAutoArrange,
  IconOptions_SetAutoArrange,
  IconOptions_StaticClassType;

