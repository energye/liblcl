name: Build Linux docker i386

on:
  workflow_dispatch:
#  push:
#    tags:
#      - 'v*.*.*'

jobs:
  linux-i386:
    runs-on: ${{ matrix.operating-system }}
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    strategy:
      matrix:
        operating-system: [ ubuntu-20.04 ]
        lazarus-versions: [ 3.6 ]
        include:
          - arch: i386
            distro: debian:11

    steps:
      - uses: actions/checkout@v4

      - name: Install Lazarus Environment # Install Lazarus
        uses: energye/setup-lazarus@v1.0.0
        with:
          lazarus-version: ${{ matrix.lazarus-versions }}
          source-install: true
          os-arch: i386

      - name: Container Build Lazarus
        uses: uraimo/run-on-arch-action@v2
        id: build
        with:
          arch: none
          distro: none
          base_image: ${{ matrix.arch }}/${{ matrix.distro }} # 因为没有amd架构，所以手动指定基础镜像

          # 不需要，但可加快构建速度
          githubToken: ${{ github.token }}

          # 将目录装载为容器中的/app
          dockerRunArgs: |
            --volume "$RUNNER_WORKSPACE:/app"

          # 在容器中运行命令的shell
          shell: /bin/sh

          #在容器中安装一些依赖项。如果
          #您也在使用githubToken。此处安装的任何依赖项都将
          #是缓存的容器映像的一部分，因此后续
          #构建不必重新安装它们。缓存图像层
          #在项目的包存储库中公开，因此
          #容器状态或日志中不存在机密。
          install: |
            apt-get update -q -y
            apt-get install -q -y git
            apt-get install -q -y make binutils build-essential gdb subversion zip unzip libx11-dev libgtk2.0-dev libgdk-pixbuf2.0-dev libcairo2-dev libpango1.0-dev libgtk-3-dev
          # run 要在容器中运行的命令，复制git文件到挂载的目录中
          run: |
            pwd
            
            echo "Operating System Info ============================================="
            ls -al /app
            uname -m
            uname -r
            uname -s
            dpkg -l | grep libgtk-3-0
            dpkg -l | grep libglib2.0
            ldd --version
            cat /etc/os-release
            
            echo "Build fpc ============================================="
            cd /app/lazarus/fpc-3.2.2.i386-linux
            ls -al
            ./install.sh <<esxu
            esxu
            
            echo "Build lazarus ============================================="
            cd ../
            make clean all
            objdump -p /app/lazarus/lazbuild
            
            echo "Run Build shell ============================================="
            cd /app/lib
            
            # ./.github/shell/build-lib-in-linux-docker.sh none gtk2 i386

      - name: Release # 将二进制文件上传到发布tags
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ../bins/**